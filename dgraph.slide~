DGraph
IIT Madras
17 May 2016
Tags: go golang dgraph graph

Ashwin
ashwin2007ray@gmail.com

* Acknowledgements

Thank you :
- *Prof.*Krishna*Sivalingam* : BTP Guide
- *Manish*Rai*Jain* : Author of DGraph

* Motivation

* Background

- Flatbuffers
- GraphQL
- RDF
- Sharding

* Flatbuffers

* GraphQL

* RDF

* Sharding

* What is DGraph

* Centralised Version

.image diagrams/Centralised.jpg _ 700

* Distributed Version

.image diagrams/Distributed.jpg _ 700

* Components

* Making it Distributed

* Evaluation 

- Was done on GCE (Google Compute Engine) instances
- Metrics : Throughput, Latency [mean, 50 and 95 percentile]
- Parameters : Number of nodes in a cluster, Number of parallel connections, Number of cores in an instance

* Freebase Film Dataset

* Latency Comparison

.image graphs/cores_lat_95.jpg _ 700

* Latency Comparison

.image graphs/dist_lat_95.jpg _ 700

* Throughput Comparison

.image graphs/cores_thru.jpg _ 700

* Throughput Comparison

.image graphs/topo_thru.jpg _ 700

* Results

* Conclusion
- Performance of Distributed version is better under higher loads
- Horizontal scalability is important in Modern databases and is upported through sharding
- 
-

